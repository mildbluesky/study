깃 공부
1.시작하기
	1.1. 버전관리란?
		: 데이터 백업을 해, 안정성을 고려한 것
		: 최초 개인개발 시, 하드에 데이터 백업 (로컬버전관리 VCS-Version Control System 도구중 RCS 주로 사용)
		: 그 후 중앙집중식 버전관리(CVCS - Center Version Control System) : 중앙 시스템에 문제 있을 시 타격 - svn
		: 그 후 분산버전관리(DVCS - Dispersion Version Control System) : 중앙 시스템 문제 있을 시 로컬에서 클론이 가능해짐 - git
		
	
	1.2. 짧게 보는 Git의 역사
		: 2002년 이전까지는 리눅스는 patch와 압축파일로 관리 됨
		: 2002년 BitKeeper라는 상용 DVCS가 나왔다.
		: 불만을 느낀 Linux 개발 커뮤니티에서 Git을 개발하기 시작
		: Git 은 빠른속도, 단순한 구조, 비선형적인 개발, 완벽한 분산, 대형프로젝트에서 유용할 것이라는 목표를 지향하는 중.
	
	
	1.3. Git 기초
		: svn 은 시간순으로 변경된 파일을 저장 관리한다. - 델타 기반 -
		: git 은 파일 변경상태 순으로 시점에 상태를 관리한다. - 스냅샷 -
		: 거의 모든 명령이 로컬에서 실행 된다. 오프라인에서 commit도 가능하다.
		: 저장하기전 체크섬(SHA-1 해시 : 24b9da6552252987aa493b52f8696cd6d3b00373) 으로 관리하기떄문에 git없이는 디랙토리 변경, 파일상태, 데이터 손실 시킬 수 없다.
		: *깃이 로컬에서 저장되는 곳 -> .git 폴더
		: *깃이 가지는 세가지 상태 -> commited, modified, staged
		: *commited -> 로컬 데이터베이스에 저장됐다.
		: *modified -> 아직 커밋되지 않은 수정된 파일을 의미한다.
		: *staged -> 곧 커핏ㄷ할 것이라고 표시한 상태를 의미한다.
		: *working direct -> 작업하는 브랜치
		: *staging area -> 커밋하기전에 정보를 저장한다 (index)
		: *.git directory (Repository) -> 깃저장관련 정보를 저장한다.
		
		
	1.4. CLI
		: git tool
		: 모든 기능 구현 가능하다.
		: GUI도 있지만 모든 기능을 구현하지 못한다.
		
		
		
		
	

	






================깃 단축키=======================
강제종료 : esc esc q
